name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      # Install Chrome and ChromeDriver
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip libxi6 libgconf-2-4 libxrandr2 libasound2 libatk1.0-0 libgtk-3-0
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          CHROME_VERSION=$(google-chrome --version | awk '{print $3}')
          CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          wget -q -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      # Verify Chrome and ChromeDriver Versions
      - name: Verify Chrome and ChromeDriver Versions
        run: |
          echo "Chrome version:"
          google-chrome --version
          echo "ChromeDriver version:"
          chromedriver --version

      # Debug Environment
      - name: Debug Environment
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn -version
          echo "Environment variables:"
          printenv

      # Build and run tests
      - name: Build and run tests
        run: mvn clean test  # For Maven
        # run: ./gradlew clean test  # For Gradle

      # List report directories for debugging
      - name: List Report Directories
        run: |
          ls -R target/cucumber-reports
          ls -R allure-results
          ls -R target/extent-reports

      # Generate and publish reports
      - name: Publish Cucumber HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: target/cucumber-reports
          if-no-files-found: error
          
      # Generate and publish reports
      - name: Publish Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-results
          if-no-files-found: error

      - name: Publish ExtentReports
        uses: actions/upload-artifact@v4
        with:
          name: extent-report
          path: target/extent-reports
          if-no-files-found: error